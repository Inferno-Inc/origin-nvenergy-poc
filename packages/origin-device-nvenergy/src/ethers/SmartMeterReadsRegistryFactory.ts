/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { SmartMeterReadsRegistry } from "./SmartMeterReadsRegistry";

export class SmartMeterReadsRegistryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<SmartMeterReadsRegistry> {
    return super.deploy(overrides) as Promise<SmartMeterReadsRegistry>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): SmartMeterReadsRegistry {
    return super.attach(address) as SmartMeterReadsRegistry;
  }
  connect(signer: Signer): SmartMeterReadsRegistryFactory {
    return super.connect(signer) as SmartMeterReadsRegistryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmartMeterReadsRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SmartMeterReadsRegistry;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "DAILY_BUCKET",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "meter",
        type: "address"
      },
      {
        indexed: true,
        name: "bucket",
        type: "uint256"
      },
      {
        indexed: false,
        name: "operator",
        type: "address"
      },
      {
        indexed: false,
        name: "timestamp",
        type: "uint256"
      },
      {
        indexed: false,
        name: "data",
        type: "bytes"
      }
    ],
    name: "NewReadStored",
    type: "event"
  },
  {
    constant: false,
    inputs: [
      {
        name: "meter",
        type: "address"
      },
      {
        name: "data",
        type: "bytes"
      },
      {
        name: "timestamp",
        type: "uint256"
      },
      {
        name: "bucket",
        type: "uint256"
      }
    ],
    name: "store",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "meter",
        type: "address"
      },
      {
        name: "data",
        type: "bytes"
      },
      {
        name: "timestamp",
        type: "uint256"
      }
    ],
    name: "storeWithDailyBucket",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103ba806100206000396000f3fe608060405234801561001057600080fd5b506004361061005d577c01000000000000000000000000000000000000000000000000000000006000350463af3f9c178114610062578063c6f5ed751461012c578063fb88dee814610146575b600080fd5b61012a6004803603608081101561007857600080fd5b73ffffffffffffffffffffffffffffffffffffffff82351691908101906040810160208201356401000000008111156100b057600080fd5b8201836020820111156100c257600080fd5b803590602001918460018302840111640100000000831117156100e457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550508235935050506020013561020b565b005b61013461036d565b60408051918252519081900360200190f35b61012a6004803603606081101561015c57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561019457600080fd5b8201836020820111156101a657600080fd5b803590602001918460018302840111640100000000831117156101c857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250610374915050565b4282111561027a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4675747572652074696d657374616d702070726f766964656400000000000000604482015290519081900360640190fd5b808473ffffffffffffffffffffffffffffffffffffffff167f935eafed300fc1744e1b8189319d379651752523123284062d1b210fd3007176338587604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561032b578181015183820152602001610313565b50505050905090810190601f1680156103585780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a350505050565b6201518081565b62015180810681036103888484848461020b565b5050505056fea165627a7a72305820e4b004b5f96f0536d802cfa7dd40a729ff710c541b9f774597dd0ba5a7ae70d10029";
